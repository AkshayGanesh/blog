{"ast":null,"code":"\"use strict\";\n\n/**\n * @module indicative\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Collection of validations, that can be used to\n * define validation rules.\n */\nexports.validations = {\n  above(_ref) {\n    let [minValue] = _ref;\n    return {\n      name: 'above',\n      args: [minValue]\n    };\n  },\n  accepted() {\n    return {\n      name: 'accepted',\n      args: []\n    };\n  },\n  alpha() {\n    return {\n      name: 'alpha',\n      args: []\n    };\n  },\n  alphaNumeric() {\n    return {\n      name: 'alphaNumeric',\n      args: []\n    };\n  },\n  array() {\n    return {\n      name: 'array',\n      args: []\n    };\n  },\n  boolean() {\n    return {\n      name: 'boolean',\n      args: []\n    };\n  },\n  confirmed() {\n    return {\n      name: 'confirmed',\n      args: []\n    };\n  },\n  different(args) {\n    return {\n      name: 'different',\n      args: args || []\n    };\n  },\n  email() {\n    return {\n      name: 'email',\n      args: []\n    };\n  },\n  endsWith(args) {\n    return {\n      name: 'endsWith',\n      args: args || []\n    };\n  },\n  equals(args) {\n    return {\n      name: 'equals',\n      args: args || []\n    };\n  },\n  in(args) {\n    return {\n      name: 'in',\n      args: args || []\n    };\n  },\n  includes(args) {\n    return {\n      name: 'includes',\n      args: args || []\n    };\n  },\n  integer() {\n    return {\n      name: 'integer',\n      args: []\n    };\n  },\n  float() {\n    return {\n      name: 'float',\n      args: []\n    };\n  },\n  ip() {\n    return {\n      name: 'ip',\n      args: []\n    };\n  },\n  ipv4() {\n    return {\n      name: 'ipv4',\n      args: []\n    };\n  },\n  ipv6() {\n    return {\n      name: 'ipv6',\n      args: []\n    };\n  },\n  json() {\n    return {\n      name: 'json',\n      args: []\n    };\n  },\n  max(args) {\n    return {\n      name: 'max',\n      args: args || []\n    };\n  },\n  size(args) {\n    return {\n      name: 'size',\n      args: args || []\n    };\n  },\n  min(args) {\n    return {\n      name: 'min',\n      args: args || []\n    };\n  },\n  notEquals(args) {\n    return {\n      name: 'notEquals',\n      args: args || []\n    };\n  },\n  notIn(args) {\n    return {\n      name: 'notIn',\n      args: args || []\n    };\n  },\n  number() {\n    return {\n      name: 'number',\n      args: []\n    };\n  },\n  object() {\n    return {\n      name: 'object',\n      args: []\n    };\n  },\n  range(args) {\n    return {\n      name: 'range',\n      args: args || []\n    };\n  },\n  regex(args) {\n    return {\n      name: 'regex',\n      args: args || []\n    };\n  },\n  required() {\n    return {\n      name: 'required',\n      args: []\n    };\n  },\n  requiredIf(args) {\n    return {\n      name: 'requiredIf',\n      args: args || []\n    };\n  },\n  requiredWhen(args) {\n    return {\n      name: 'requiredWhen',\n      args: args || []\n    };\n  },\n  requiredWithAll(args) {\n    return {\n      name: 'requiredWithAll',\n      args: args || []\n    };\n  },\n  requiredWithAny(args) {\n    return {\n      name: 'requiredWithAny',\n      args: args || []\n    };\n  },\n  requiredWithoutAll(args) {\n    return {\n      name: 'requiredWithoutAll',\n      args: args || []\n    };\n  },\n  requiredWithoutAny(args) {\n    return {\n      name: 'requiredWithoutAny',\n      args: args || []\n    };\n  },\n  same(args) {\n    return {\n      name: 'same',\n      args: args || []\n    };\n  },\n  startsWith(args) {\n    return {\n      name: 'startsWith',\n      args: args || []\n    };\n  },\n  string() {\n    return {\n      name: 'string',\n      args: []\n    };\n  },\n  subset(args) {\n    return {\n      name: 'subset',\n      args: args || []\n    };\n  },\n  under(args) {\n    return {\n      name: 'under',\n      args: args || []\n    };\n  },\n  url() {\n    return {\n      name: 'url',\n      args: []\n    };\n  },\n  after(args) {\n    return {\n      name: 'after',\n      args: args || []\n    };\n  },\n  before(args) {\n    return {\n      name: 'before',\n      args: args || []\n    };\n  },\n  date() {\n    return {\n      name: 'date',\n      args: []\n    };\n  },\n  dateFormat(args) {\n    return {\n      name: 'dateFormat',\n      args: args || []\n    };\n  },\n  beforeOffsetOf(args) {\n    return {\n      name: 'beforeOffsetOf',\n      args: args || []\n    };\n  },\n  afterOffsetOf(args) {\n    return {\n      name: 'afterOffsetOf',\n      args: args || []\n    };\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","validations","above","_ref","minValue","name","args","accepted","alpha","alphaNumeric","array","boolean","confirmed","different","email","endsWith","equals","in","includes","integer","float","ip","ipv4","ipv6","json","max","size","min","notEquals","notIn","number","object","range","regex","required","requiredIf","requiredWhen","requiredWithAll","requiredWithAny","requiredWithoutAll","requiredWithoutAny","same","startsWith","string","subset","under","url","after","before","date","dateFormat","beforeOffsetOf","afterOffsetOf"],"sources":["/Users/akshayg/Personal/blog/blog/node_modules/indicative/src/Validator/validations.js"],"sourcesContent":["\"use strict\";\n/**\n * @module indicative\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Collection of validations, that can be used to\n * define validation rules.\n */\nexports.validations = {\n    above([minValue]) {\n        return { name: 'above', args: [minValue] };\n    },\n    accepted() {\n        return { name: 'accepted', args: [] };\n    },\n    alpha() {\n        return { name: 'alpha', args: [] };\n    },\n    alphaNumeric() {\n        return { name: 'alphaNumeric', args: [] };\n    },\n    array() {\n        return { name: 'array', args: [] };\n    },\n    boolean() {\n        return { name: 'boolean', args: [] };\n    },\n    confirmed() {\n        return { name: 'confirmed', args: [] };\n    },\n    different(args) {\n        return { name: 'different', args: args || [] };\n    },\n    email() {\n        return { name: 'email', args: [] };\n    },\n    endsWith(args) {\n        return { name: 'endsWith', args: args || [] };\n    },\n    equals(args) {\n        return { name: 'equals', args: args || [] };\n    },\n    in(args) {\n        return { name: 'in', args: args || [] };\n    },\n    includes(args) {\n        return { name: 'includes', args: args || [] };\n    },\n    integer() {\n        return { name: 'integer', args: [] };\n    },\n    float() {\n        return { name: 'float', args: [] };\n    },\n    ip() {\n        return { name: 'ip', args: [] };\n    },\n    ipv4() {\n        return { name: 'ipv4', args: [] };\n    },\n    ipv6() {\n        return { name: 'ipv6', args: [] };\n    },\n    json() {\n        return { name: 'json', args: [] };\n    },\n    max(args) {\n        return { name: 'max', args: args || [] };\n    },\n    size(args) {\n        return { name: 'size', args: args || [] };\n    },\n    min(args) {\n        return { name: 'min', args: args || [] };\n    },\n    notEquals(args) {\n        return { name: 'notEquals', args: args || [] };\n    },\n    notIn(args) {\n        return { name: 'notIn', args: args || [] };\n    },\n    number() {\n        return { name: 'number', args: [] };\n    },\n    object() {\n        return { name: 'object', args: [] };\n    },\n    range(args) {\n        return { name: 'range', args: args || [] };\n    },\n    regex(args) {\n        return { name: 'regex', args: args || [] };\n    },\n    required() {\n        return { name: 'required', args: [] };\n    },\n    requiredIf(args) {\n        return { name: 'requiredIf', args: args || [] };\n    },\n    requiredWhen(args) {\n        return { name: 'requiredWhen', args: args || [] };\n    },\n    requiredWithAll(args) {\n        return { name: 'requiredWithAll', args: args || [] };\n    },\n    requiredWithAny(args) {\n        return { name: 'requiredWithAny', args: args || [] };\n    },\n    requiredWithoutAll(args) {\n        return { name: 'requiredWithoutAll', args: args || [] };\n    },\n    requiredWithoutAny(args) {\n        return { name: 'requiredWithoutAny', args: args || [] };\n    },\n    same(args) {\n        return { name: 'same', args: args || [] };\n    },\n    startsWith(args) {\n        return { name: 'startsWith', args: args || [] };\n    },\n    string() {\n        return { name: 'string', args: [] };\n    },\n    subset(args) {\n        return { name: 'subset', args: args || [] };\n    },\n    under(args) {\n        return { name: 'under', args: args || [] };\n    },\n    url() {\n        return { name: 'url', args: [] };\n    },\n    after(args) {\n        return { name: 'after', args: args || [] };\n    },\n    before(args) {\n        return { name: 'before', args: args || [] };\n    },\n    date() {\n        return { name: 'date', args: [] };\n    },\n    dateFormat(args) {\n        return { name: 'dateFormat', args: args || [] };\n    },\n    beforeOffsetOf(args) {\n        return { name: 'beforeOffsetOf', args: args || [] };\n    },\n    afterOffsetOf(args) {\n        return { name: 'afterOffsetOf', args: args || [] };\n    },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
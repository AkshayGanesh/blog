{"ast":null,"code":"\"use strict\";\n\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst indicative_utils_1 = require(\"indicative-utils\");\n/**\n * Enforces the field value to a valid Javascript array.\n *\n * ```ts\n * import { validations } from 'indicative/validator'\n *\n * const rules = {\n *   whiteListedUrls: 'array'\n * }\n *\n * // or\n * const rules = {\n *   whiteListedUrls: [\n *     validations.array()\n *   ]\n * }\n * ```\n */\nconst validation = {\n  async: false,\n  validate: (data, field) => {\n    const fieldValue = indicative_utils_1.getValue(data, field);\n    const config = {\n      existyStrict: true\n    };\n    return indicative_utils_1.skippable(fieldValue, field, config) || Array.isArray(fieldValue);\n  }\n};\nexports.default = validation;","map":{"version":3,"names":["Object","defineProperty","exports","value","indicative_utils_1","require","validation","async","validate","data","field","fieldValue","getValue","config","existyStrict","skippable","Array","isArray","default"],"sources":["/Users/akshayg/Personal/blog/blog/node_modules/indicative-rules/build/src/validations/array/array.js"],"sourcesContent":["\"use strict\";\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst indicative_utils_1 = require(\"indicative-utils\");\n/**\n * Enforces the field value to a valid Javascript array.\n *\n * ```ts\n * import { validations } from 'indicative/validator'\n *\n * const rules = {\n *   whiteListedUrls: 'array'\n * }\n *\n * // or\n * const rules = {\n *   whiteListedUrls: [\n *     validations.array()\n *   ]\n * }\n * ```\n */\nconst validation = {\n    async: false,\n    validate: (data, field) => {\n        const fieldValue = indicative_utils_1.getValue(data, field);\n        const config = { existyStrict: true };\n        return indicative_utils_1.skippable(fieldValue, field, config) || Array.isArray(fieldValue);\n    },\n};\nexports.default = validation;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,kBAAkB,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,GAAG;EACfC,KAAK,EAAE,KAAK;EACZC,QAAQ,EAAEA,CAACC,IAAI,EAAEC,KAAK,KAAK;IACvB,MAAMC,UAAU,GAAGP,kBAAkB,CAACQ,QAAQ,CAACH,IAAI,EAAEC,KAAK,CAAC;IAC3D,MAAMG,MAAM,GAAG;MAAEC,YAAY,EAAE;IAAK,CAAC;IACrC,OAAOV,kBAAkB,CAACW,SAAS,CAACJ,UAAU,EAAED,KAAK,EAAEG,MAAM,CAAC,IAAIG,KAAK,CAACC,OAAO,CAACN,UAAU,CAAC;EAC/F;AACJ,CAAC;AACDT,OAAO,CAACgB,OAAO,GAAGZ,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}
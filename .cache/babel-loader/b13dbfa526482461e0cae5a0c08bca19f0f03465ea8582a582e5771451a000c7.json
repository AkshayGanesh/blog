{"ast":null,"code":"\"use strict\";\n\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst indicative_utils_1 = require(\"indicative-utils\");\nconst empty_1 = require(\"../../raw/empty\");\nconst existy_1 = require(\"../../raw/existy\");\nconst MISSING_VALUE = 'requiredIf:make sure to define target field';\n/**\n * Enforces the field value to exist when the target field exists. For example:\n * Ask for `address` when value for `needs_delivery` exists.\n *\n * ```ts\n * import { validations } from 'indicative/validator'\n *\n * const rules = {\n *   address: 'required_if:needs_delivery'\n * }\n *\n * // or\n * const rules = {\n *   address: [\n *     validations.requiredIf(['needs_delivery'])\n *   ]\n * }\n * ```\n */\nconst validation = {\n  async: false,\n  compile(args) {\n    indicative_utils_1.ensureLength(args, MISSING_VALUE, 1);\n    return [String(args[0])];\n  },\n  validate: (data, field, _ref) => {\n    let [targetField] = _ref;\n    if (!existy_1.existy(indicative_utils_1.getValue(data, targetField))) {\n      return true;\n    }\n    return !empty_1.empty(indicative_utils_1.getValue(data, field));\n  }\n};\nexports.default = validation;","map":{"version":3,"names":["Object","defineProperty","exports","value","indicative_utils_1","require","empty_1","existy_1","MISSING_VALUE","validation","async","compile","args","ensureLength","String","validate","data","field","_ref","targetField","existy","getValue","empty","default"],"sources":["/Users/akshayg/Personal/blog/blog/node_modules/indicative-rules/build/src/validations/existence/requiredIf.js"],"sourcesContent":["\"use strict\";\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst indicative_utils_1 = require(\"indicative-utils\");\nconst empty_1 = require(\"../../raw/empty\");\nconst existy_1 = require(\"../../raw/existy\");\nconst MISSING_VALUE = 'requiredIf:make sure to define target field';\n/**\n * Enforces the field value to exist when the target field exists. For example:\n * Ask for `address` when value for `needs_delivery` exists.\n *\n * ```ts\n * import { validations } from 'indicative/validator'\n *\n * const rules = {\n *   address: 'required_if:needs_delivery'\n * }\n *\n * // or\n * const rules = {\n *   address: [\n *     validations.requiredIf(['needs_delivery'])\n *   ]\n * }\n * ```\n */\nconst validation = {\n    async: false,\n    compile(args) {\n        indicative_utils_1.ensureLength(args, MISSING_VALUE, 1);\n        return [String(args[0])];\n    },\n    validate: (data, field, [targetField]) => {\n        if (!existy_1.existy(indicative_utils_1.getValue(data, targetField))) {\n            return true;\n        }\n        return !empty_1.empty(indicative_utils_1.getValue(data, field));\n    },\n};\nexports.default = validation;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,kBAAkB,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACtD,MAAMC,OAAO,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAC1C,MAAME,QAAQ,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AAC5C,MAAMG,aAAa,GAAG,6CAA6C;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,GAAG;EACfC,KAAK,EAAE,KAAK;EACZC,OAAOA,CAACC,IAAI,EAAE;IACVR,kBAAkB,CAACS,YAAY,CAACD,IAAI,EAAEJ,aAAa,EAAE,CAAC,CAAC;IACvD,OAAO,CAACM,MAAM,CAACF,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EACDG,QAAQ,EAAEA,CAACC,IAAI,EAAEC,KAAK,EAAAC,IAAA,KAAoB;IAAA,IAAlB,CAACC,WAAW,CAAC,GAAAD,IAAA;IACjC,IAAI,CAACX,QAAQ,CAACa,MAAM,CAAChB,kBAAkB,CAACiB,QAAQ,CAACL,IAAI,EAAEG,WAAW,CAAC,CAAC,EAAE;MAClE,OAAO,IAAI;IACf;IACA,OAAO,CAACb,OAAO,CAACgB,KAAK,CAAClB,kBAAkB,CAACiB,QAAQ,CAACL,IAAI,EAAEC,KAAK,CAAC,CAAC;EACnE;AACJ,CAAC;AACDf,OAAO,CAACqB,OAAO,GAAGd,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}
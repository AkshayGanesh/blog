{"ast":null,"code":"\"use strict\";\n\n/**\n * @module indicative-formatters\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Vanilla formatter is a plain formatter to collect validation\n * errors\n */\nclass JsonApiFormatter {\n  constructor() {\n    this.errors = [];\n  }\n  /**\n   * Adds error to the list of existing errors\n   */\n  addError(error, field, rule, args) {\n    let message = '';\n    let validation = rule;\n    if (error instanceof Error) {\n      message = error.message;\n      validation = 'ENGINE_EXCEPTION';\n    } else {\n      message = error;\n    }\n    this.errors.push({\n      source: {\n        pointer: field\n      },\n      title: validation,\n      detail: message,\n      meta: {\n        args\n      }\n    });\n  }\n  /**\n   * Returns an array of errors or `null` when there are no\n   * errors\n   */\n  toJSON() {\n    return this.errors.length ? {\n      errors: this.errors\n    } : null;\n  }\n}\nexports.JsonApiFormatter = JsonApiFormatter;","map":{"version":3,"names":["Object","defineProperty","exports","value","JsonApiFormatter","constructor","errors","addError","error","field","rule","args","message","validation","Error","push","source","pointer","title","detail","meta","toJSON","length"],"sources":["/Users/akshayg/Personal/blog/blog/node_modules/indicative-formatters/build/src/JsonApiFormatter.js"],"sourcesContent":["\"use strict\";\n/**\n * @module indicative-formatters\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Vanilla formatter is a plain formatter to collect validation\n * errors\n */\nclass JsonApiFormatter {\n    constructor() {\n        this.errors = [];\n    }\n    /**\n     * Adds error to the list of existing errors\n     */\n    addError(error, field, rule, args) {\n        let message = '';\n        let validation = rule;\n        if (error instanceof Error) {\n            message = error.message;\n            validation = 'ENGINE_EXCEPTION';\n        }\n        else {\n            message = error;\n        }\n        this.errors.push({\n            source: { pointer: field },\n            title: validation,\n            detail: message,\n            meta: { args },\n        });\n    }\n    /**\n     * Returns an array of errors or `null` when there are no\n     * errors\n     */\n    toJSON() {\n        return this.errors.length ? { errors: this.errors } : null;\n    }\n}\nexports.JsonApiFormatter = JsonApiFormatter;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,CAAC;EACnBC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,MAAM,GAAG,EAAE;EACpB;EACA;AACJ;AACA;EACIC,QAAQA,CAACC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,IAAI,EAAE;IAC/B,IAAIC,OAAO,GAAG,EAAE;IAChB,IAAIC,UAAU,GAAGH,IAAI;IACrB,IAAIF,KAAK,YAAYM,KAAK,EAAE;MACxBF,OAAO,GAAGJ,KAAK,CAACI,OAAO;MACvBC,UAAU,GAAG,kBAAkB;IACnC,CAAC,MACI;MACDD,OAAO,GAAGJ,KAAK;IACnB;IACA,IAAI,CAACF,MAAM,CAACS,IAAI,CAAC;MACbC,MAAM,EAAE;QAAEC,OAAO,EAAER;MAAM,CAAC;MAC1BS,KAAK,EAAEL,UAAU;MACjBM,MAAM,EAAEP,OAAO;MACfQ,IAAI,EAAE;QAAET;MAAK;IACjB,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;EACIU,MAAMA,CAAA,EAAG;IACL,OAAO,IAAI,CAACf,MAAM,CAACgB,MAAM,GAAG;MAAEhB,MAAM,EAAE,IAAI,CAACA;IAAO,CAAC,GAAG,IAAI;EAC9D;AACJ;AACAJ,OAAO,CAACE,gBAAgB,GAAGA,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
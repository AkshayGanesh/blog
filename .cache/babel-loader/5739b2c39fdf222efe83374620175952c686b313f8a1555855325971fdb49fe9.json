{"ast":null,"code":"\"use strict\";\n\n/**\n * @module compiler/sanitizer\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n* indicative-compiler\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\nconst indicative_parser_1 = require(\"indicative-parser\");\nconst TreeWalker_1 = require(\"../TreeWalker\");\nconst ArrayWrapper_1 = require(\"./ArrayWrapper\");\nconst SanitizationsRunner_1 = require(\"./SanitizationsRunner\");\n/**\n * Compiles rules and messages schema to an array of top level\n * functions highly optimized for speed.\n */\nclass Compiler {\n  constructor(schema, sanitizations) {\n    this.sanitizations = sanitizations;\n    this.parsedSchema = indicative_parser_1.rulesParser(schema);\n  }\n  /**\n   * Compiles the schema to an array of functions\n   */\n  compile() {\n    return new TreeWalker_1.TreeWalker(\n    /**\n     * Consume each node inside the tree\n     */\n    (field, _, rules, dotPath) => {\n      return new SanitizationsRunner_1.SanitizationsRunner(field, dotPath, rules, this.sanitizations);\n    },\n    /**\n     * Wraps array children, since the length of array is unknown.\n     */\n    (index, field, children, dotPath) => {\n      return new ArrayWrapper_1.ArrayWrapper(field, index, children, dotPath);\n    }).walk(this.parsedSchema);\n  }\n}\nexports.Compiler = Compiler;","map":{"version":3,"names":["Object","defineProperty","exports","value","indicative_parser_1","require","TreeWalker_1","ArrayWrapper_1","SanitizationsRunner_1","Compiler","constructor","schema","sanitizations","parsedSchema","rulesParser","compile","TreeWalker","field","_","rules","dotPath","SanitizationsRunner","index","children","ArrayWrapper","walk"],"sources":["/Users/akshayg/Personal/blog/blog/node_modules/indicative-compiler/build/src/Sanitizer/Compiler.js"],"sourcesContent":["\"use strict\";\n/**\n * @module compiler/sanitizer\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n* indicative-compiler\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\nconst indicative_parser_1 = require(\"indicative-parser\");\nconst TreeWalker_1 = require(\"../TreeWalker\");\nconst ArrayWrapper_1 = require(\"./ArrayWrapper\");\nconst SanitizationsRunner_1 = require(\"./SanitizationsRunner\");\n/**\n * Compiles rules and messages schema to an array of top level\n * functions highly optimized for speed.\n */\nclass Compiler {\n    constructor(schema, sanitizations) {\n        this.sanitizations = sanitizations;\n        this.parsedSchema = indicative_parser_1.rulesParser(schema);\n    }\n    /**\n     * Compiles the schema to an array of functions\n     */\n    compile() {\n        return new TreeWalker_1.TreeWalker(\n        /**\n         * Consume each node inside the tree\n         */\n        (field, _, rules, dotPath) => {\n            return new SanitizationsRunner_1.SanitizationsRunner(field, dotPath, rules, this.sanitizations);\n        }, \n        /**\n         * Wraps array children, since the length of array is unknown.\n         */\n        (index, field, children, dotPath) => {\n            return new ArrayWrapper_1.ArrayWrapper(field, index, children, dotPath);\n        }).walk(this.parsedSchema);\n    }\n}\nexports.Compiler = Compiler;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,mBAAmB,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACxD,MAAMC,YAAY,GAAGD,OAAO,CAAC,eAAe,CAAC;AAC7C,MAAME,cAAc,GAAGF,OAAO,CAAC,gBAAgB,CAAC;AAChD,MAAMG,qBAAqB,GAAGH,OAAO,CAAC,uBAAuB,CAAC;AAC9D;AACA;AACA;AACA;AACA,MAAMI,QAAQ,CAAC;EACXC,WAAWA,CAACC,MAAM,EAAEC,aAAa,EAAE;IAC/B,IAAI,CAACA,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,YAAY,GAAGT,mBAAmB,CAACU,WAAW,CAACH,MAAM,CAAC;EAC/D;EACA;AACJ;AACA;EACII,OAAOA,CAAA,EAAG;IACN,OAAO,IAAIT,YAAY,CAACU,UAAU;IAClC;AACR;AACA;IACQ,CAACC,KAAK,EAAEC,CAAC,EAAEC,KAAK,EAAEC,OAAO,KAAK;MAC1B,OAAO,IAAIZ,qBAAqB,CAACa,mBAAmB,CAACJ,KAAK,EAAEG,OAAO,EAAED,KAAK,EAAE,IAAI,CAACP,aAAa,CAAC;IACnG,CAAC;IACD;AACR;AACA;IACQ,CAACU,KAAK,EAAEL,KAAK,EAAEM,QAAQ,EAAEH,OAAO,KAAK;MACjC,OAAO,IAAIb,cAAc,CAACiB,YAAY,CAACP,KAAK,EAAEK,KAAK,EAAEC,QAAQ,EAAEH,OAAO,CAAC;IAC3E,CAAC,CAAC,CAACK,IAAI,CAAC,IAAI,CAACZ,YAAY,CAAC;EAC9B;AACJ;AACAX,OAAO,CAACO,QAAQ,GAAGA,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}
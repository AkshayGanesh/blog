{"ast":null,"code":"var _jsxFileName = \"/Users/akshayg/Personal/blog/blog/src/components/CreateArticle/editor.jsx\";\nimport React from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editorHtml: \"\",\n      theme: \"snow\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(html) {\n    this.setState({\n      editorHtml: html\n    });\n    this.props.parentCallback(html);\n  }\n  handleThemeChange(newTheme) {\n    if (newTheme === \"core\") newTheme = null;\n    this.setState({\n      theme: newTheme\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n        theme: this.state.theme,\n        onChange: this.handleChange,\n        value: this.state.editorHtml,\n        modules: Editor.modules,\n        formats: Editor.formats,\n        bounds: \".app\",\n        placeholder: this.props.placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n/*\n * Quill modules to attach to editor\n * See https://quilljs.com/docs/modules/ for complete options\n */\n\nEditor.modules = {\n  toolbar: [[{\n    header: \"1\"\n  }, {\n    header: \"2\"\n  }, {\n    font: []\n  }], [{\n    size: []\n  }], [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"], [{\n    list: \"ordered\"\n  }, {\n    list: \"bullet\"\n  }, {\n    indent: \"-1\"\n  }, {\n    indent: \"+1\"\n  }], [\"link\", \"image\", \"video\"], [\"clean\"]],\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false\n  }\n};\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\nEditor.formats = [\"header\", \"font\", \"size\", \"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\", \"list\", \"bullet\", \"indent\", \"link\", \"image\", \"video\"];\n\n/*\n * PropType validation\n */\nEditor.propTypes = {\n  placeholder: PropTypes.string\n};\n\n// <Editor placeholder={'Write something...'}/>,\nexport default Editor;","map":{"version":3,"names":["React","ReactQuill","PropTypes","jsxDEV","_jsxDEV","Editor","Component","constructor","props","state","editorHtml","theme","handleChange","bind","html","setState","parentCallback","handleThemeChange","newTheme","render","children","onChange","value","modules","formats","bounds","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","toolbar","header","font","size","list","indent","clipboard","matchVisual","propTypes","string"],"sources":["/Users/akshayg/Personal/blog/blog/src/components/CreateArticle/editor.jsx"],"sourcesContent":["import React from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n\nimport PropTypes from \"prop-types\";\n\nclass Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { editorHtml: \"\", theme: \"snow\" };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(html) {\n    this.setState({ editorHtml: html });\n    this.props.parentCallback(html);\n  }\n\n  handleThemeChange(newTheme) {\n    if (newTheme === \"core\") newTheme = null;\n    this.setState({ theme: newTheme });\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactQuill\n          theme={this.state.theme}\n          onChange={this.handleChange}\n          value={this.state.editorHtml}\n          modules={Editor.modules}\n          formats={Editor.formats}\n          bounds={\".app\"}\n          placeholder={this.props.placeholder}\n        />\n      </div>\n    );\n  }\n}\n\n/*\n * Quill modules to attach to editor\n * See https://quilljs.com/docs/modules/ for complete options\n */\n\nEditor.modules = {\n  toolbar: [\n    [{ header: \"1\" }, { header: \"2\" }, { font: [] }],\n    [{ size: [] }],\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n    [\n      { list: \"ordered\" },\n      { list: \"bullet\" },\n      { indent: \"-1\" },\n      { indent: \"+1\" },\n    ],\n    [\"link\", \"image\", \"video\"],\n    [\"clean\"],\n  ],\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false,\n  },\n};\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\nEditor.formats = [\n  \"header\",\n  \"font\",\n  \"size\",\n  \"bold\",\n  \"italic\",\n  \"underline\",\n  \"strike\",\n  \"blockquote\",\n  \"list\",\n  \"bullet\",\n  \"indent\",\n  \"link\",\n  \"image\",\n  \"video\",\n];\n\n/*\n * PropType validation\n */\nEditor.propTypes = {\n  placeholder: PropTypes.string,\n};\n\n// <Editor placeholder={'Write something...'}/>,\nexport default Editor;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAO,iCAAiC;AAExC,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,MAAM,SAASL,KAAK,CAACM,SAAS,CAAC;EACnCC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MAAEC,UAAU,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAO,CAAC;IAC9C,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;EAClD;EAEAD,YAAYA,CAACE,IAAI,EAAE;IACjB,IAAI,CAACC,QAAQ,CAAC;MAAEL,UAAU,EAAEI;IAAK,CAAC,CAAC;IACnC,IAAI,CAACN,KAAK,CAACQ,cAAc,CAACF,IAAI,CAAC;EACjC;EAEAG,iBAAiBA,CAACC,QAAQ,EAAE;IAC1B,IAAIA,QAAQ,KAAK,MAAM,EAAEA,QAAQ,GAAG,IAAI;IACxC,IAAI,CAACH,QAAQ,CAAC;MAAEJ,KAAK,EAAEO;IAAS,CAAC,CAAC;EACpC;EAEAC,MAAMA,CAAA,EAAG;IACP,oBACEf,OAAA;MAAAgB,QAAA,eACEhB,OAAA,CAACH,UAAU;QACTU,KAAK,EAAE,IAAI,CAACF,KAAK,CAACE,KAAM;QACxBU,QAAQ,EAAE,IAAI,CAACT,YAAa;QAC5BU,KAAK,EAAE,IAAI,CAACb,KAAK,CAACC,UAAW;QAC7Ba,OAAO,EAAElB,MAAM,CAACkB,OAAQ;QACxBC,OAAO,EAAEnB,MAAM,CAACmB,OAAQ;QACxBC,MAAM,EAAE,MAAO;QACfC,WAAW,EAAE,IAAI,CAAClB,KAAK,CAACkB;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF;;AAEA;AACA;AACA;AACA;;AAEAzB,MAAM,CAACkB,OAAO,GAAG;EACfQ,OAAO,EAAE,CACP,CAAC;IAAEC,MAAM,EAAE;EAAI,CAAC,EAAE;IAAEA,MAAM,EAAE;EAAI,CAAC,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC,EAChD,CAAC;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC,EACd,CAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,YAAY,CAAC,EACvD,CACE;IAAEC,IAAI,EAAE;EAAU,CAAC,EACnB;IAAEA,IAAI,EAAE;EAAS,CAAC,EAClB;IAAEC,MAAM,EAAE;EAAK,CAAC,EAChB;IAAEA,MAAM,EAAE;EAAK,CAAC,CACjB,EACD,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,EAC1B,CAAC,OAAO,CAAC,CACV;EACDC,SAAS,EAAE;IACT;IACAC,WAAW,EAAE;EACf;AACF,CAAC;AACD;AACA;AACA;AACA;AACAjC,MAAM,CAACmB,OAAO,GAAG,CACf,QAAQ,EACR,MAAM,EACN,MAAM,EACN,MAAM,EACN,QAAQ,EACR,WAAW,EACX,QAAQ,EACR,YAAY,EACZ,MAAM,EACN,QAAQ,EACR,QAAQ,EACR,MAAM,EACN,OAAO,EACP,OAAO,CACR;;AAED;AACA;AACA;AACAnB,MAAM,CAACkC,SAAS,GAAG;EACjBb,WAAW,EAAExB,SAAS,CAACsC;AACzB,CAAC;;AAED;AACA,eAAenC,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
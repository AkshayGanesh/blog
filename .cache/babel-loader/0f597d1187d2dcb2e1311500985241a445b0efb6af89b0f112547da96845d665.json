{"ast":null,"code":"\"use strict\";\n\n/*\n * indicative-parser\n *\n * (c) Harminder Virk <virk@adonisjs.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst getTupleType_1 = require(\"../utils/getTupleType\");\n/**\n * Create an array with fixed number of children\n */\nfunction tuple() {\n  for (var _len = arguments.length, rules = new Array(_len), _key = 0; _key < _len; _key++) {\n    rules[_key] = arguments[_key];\n  }\n  return {\n    members() {\n      for (var _len2 = arguments.length, schema = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        schema[_key2] = arguments[_key2];\n      }\n      return getTupleType_1.getTupleType(schema, false, rules);\n    }\n  };\n}\nexports.tuple = tuple;\n/**\n * Create an optional array with fixed number of children\n */\ntuple.optional = function () {\n  for (var _len3 = arguments.length, rules = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    rules[_key3] = arguments[_key3];\n  }\n  return {\n    members() {\n      for (var _len4 = arguments.length, schema = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        schema[_key4] = arguments[_key4];\n      }\n      return getTupleType_1.getTupleType(schema, true, rules);\n    }\n  };\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","getTupleType_1","require","tuple","_len","arguments","length","rules","Array","_key","members","_len2","schema","_key2","getTupleType","optional","_len3","_key3","_len4","_key4"],"sources":["/Users/akshayg/Personal/blog/blog/node_modules/indicative-parser/build/src/Types/tuple.js"],"sourcesContent":["\"use strict\";\n/*\n * indicative-parser\n *\n * (c) Harminder Virk <virk@adonisjs.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst getTupleType_1 = require(\"../utils/getTupleType\");\n/**\n * Create an array with fixed number of children\n */\nfunction tuple(...rules) {\n    return {\n        members(...schema) {\n            return getTupleType_1.getTupleType(schema, false, rules);\n        },\n    };\n}\nexports.tuple = tuple;\n/**\n * Create an optional array with fixed number of children\n */\ntuple.optional = (...rules) => {\n    return {\n        members(...schema) {\n            return getTupleType_1.getTupleType(schema, true, rules);\n        },\n    };\n};\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,cAAc,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AACvD;AACA;AACA;AACA,SAASC,KAAKA,CAAA,EAAW;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAPC,KAAK,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAALF,KAAK,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EACnB,OAAO;IACHC,OAAOA,CAAA,EAAY;MAAA,SAAAC,KAAA,GAAAN,SAAA,CAAAC,MAAA,EAARM,MAAM,OAAAJ,KAAA,CAAAG,KAAA,GAAAE,KAAA,MAAAA,KAAA,GAAAF,KAAA,EAAAE,KAAA;QAAND,MAAM,CAAAC,KAAA,IAAAR,SAAA,CAAAQ,KAAA;MAAA;MACb,OAAOZ,cAAc,CAACa,YAAY,CAACF,MAAM,EAAE,KAAK,EAAEL,KAAK,CAAC;IAC5D;EACJ,CAAC;AACL;AACAR,OAAO,CAACI,KAAK,GAAGA,KAAK;AACrB;AACA;AACA;AACAA,KAAK,CAACY,QAAQ,GAAG,YAAc;EAAA,SAAAC,KAAA,GAAAX,SAAA,CAAAC,MAAA,EAAVC,KAAK,OAAAC,KAAA,CAAAQ,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;IAALV,KAAK,CAAAU,KAAA,IAAAZ,SAAA,CAAAY,KAAA;EAAA;EACtB,OAAO;IACHP,OAAOA,CAAA,EAAY;MAAA,SAAAQ,KAAA,GAAAb,SAAA,CAAAC,MAAA,EAARM,MAAM,OAAAJ,KAAA,CAAAU,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAANP,MAAM,CAAAO,KAAA,IAAAd,SAAA,CAAAc,KAAA;MAAA;MACb,OAAOlB,cAAc,CAACa,YAAY,CAACF,MAAM,EAAE,IAAI,EAAEL,KAAK,CAAC;IAC3D;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
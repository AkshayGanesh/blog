{"ast":null,"code":"\"use strict\";\n\n/**\n * @module compiler/validator\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * indicative-compiler\n *\n * (c) Harminder Virk <virk@adonisjs.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nconst Collector_1 = require(\"./Collector\");\n/**\n * Executor is meant to execute the compiled functions with runtime\n * data.\n */\nclass Executor {\n  constructor(fns) {\n    this.fns = fns;\n  }\n  /**\n   * Executes the compiled functions in sequence.\n   */\n  async exec(data, Formatter, config, bail, removeAdditional, customErrorCollector) {\n    /**\n     * Creating a root data node. The `tip` and `pointer` will be copied\n     * and mutated down the road\n     */\n    const root = {\n      tip: data,\n      original: data,\n      pointer: ''\n    };\n    /**\n     * Collector to collect errors and a fresh data object with only\n     * validated data (relies on removeAdditional though)\n     */\n    const collector = new Collector_1.Collector(new Formatter(), removeAdditional, customErrorCollector);\n    for (let fn of this.fns) {\n      let passed = false;\n      if (fn.async) {\n        passed = await fn.execAsync(root, collector, config, bail);\n      } else {\n        passed = fn.exec(root, collector, config, bail);\n      }\n      if (!passed && bail) {\n        break;\n      }\n    }\n    const errors = collector.getErrors();\n    /**\n     * If passed, return the data\n     */\n    if (!errors) {\n      return removeAdditional ? collector.getData() : data;\n    }\n    /**\n     * Otherwise return errors\n     */\n    throw errors;\n  }\n}\nexports.Executor = Executor;","map":{"version":3,"names":["Object","defineProperty","exports","value","Collector_1","require","Executor","constructor","fns","exec","data","Formatter","config","bail","removeAdditional","customErrorCollector","root","tip","original","pointer","collector","Collector","fn","passed","async","execAsync","errors","getErrors","getData"],"sources":["/Users/akshayg/Personal/blog/blog/node_modules/indicative-compiler/build/src/Validator/Executor.js"],"sourcesContent":["\"use strict\";\n/**\n * @module compiler/validator\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * indicative-compiler\n *\n * (c) Harminder Virk <virk@adonisjs.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nconst Collector_1 = require(\"./Collector\");\n/**\n * Executor is meant to execute the compiled functions with runtime\n * data.\n */\nclass Executor {\n    constructor(fns) {\n        this.fns = fns;\n    }\n    /**\n     * Executes the compiled functions in sequence.\n     */\n    async exec(data, Formatter, config, bail, removeAdditional, customErrorCollector) {\n        /**\n         * Creating a root data node. The `tip` and `pointer` will be copied\n         * and mutated down the road\n         */\n        const root = { tip: data, original: data, pointer: '' };\n        /**\n         * Collector to collect errors and a fresh data object with only\n         * validated data (relies on removeAdditional though)\n         */\n        const collector = new Collector_1.Collector(new Formatter(), removeAdditional, customErrorCollector);\n        for (let fn of this.fns) {\n            let passed = false;\n            if (fn.async) {\n                passed = await fn.execAsync(root, collector, config, bail);\n            }\n            else {\n                passed = fn.exec(root, collector, config, bail);\n            }\n            if (!passed && bail) {\n                break;\n            }\n        }\n        const errors = collector.getErrors();\n        /**\n         * If passed, return the data\n         */\n        if (!errors) {\n            return removeAdditional ? collector.getData() : data;\n        }\n        /**\n         * Otherwise return errors\n         */\n        throw errors;\n    }\n}\nexports.Executor = Executor;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,aAAa,CAAC;AAC1C;AACA;AACA;AACA;AACA,MAAMC,QAAQ,CAAC;EACXC,WAAWA,CAACC,GAAG,EAAE;IACb,IAAI,CAACA,GAAG,GAAGA,GAAG;EAClB;EACA;AACJ;AACA;EACI,MAAMC,IAAIA,CAACC,IAAI,EAAEC,SAAS,EAAEC,MAAM,EAAEC,IAAI,EAAEC,gBAAgB,EAAEC,oBAAoB,EAAE;IAC9E;AACR;AACA;AACA;IACQ,MAAMC,IAAI,GAAG;MAAEC,GAAG,EAAEP,IAAI;MAAEQ,QAAQ,EAAER,IAAI;MAAES,OAAO,EAAE;IAAG,CAAC;IACvD;AACR;AACA;AACA;IACQ,MAAMC,SAAS,GAAG,IAAIhB,WAAW,CAACiB,SAAS,CAAC,IAAIV,SAAS,CAAC,CAAC,EAAEG,gBAAgB,EAAEC,oBAAoB,CAAC;IACpG,KAAK,IAAIO,EAAE,IAAI,IAAI,CAACd,GAAG,EAAE;MACrB,IAAIe,MAAM,GAAG,KAAK;MAClB,IAAID,EAAE,CAACE,KAAK,EAAE;QACVD,MAAM,GAAG,MAAMD,EAAE,CAACG,SAAS,CAACT,IAAI,EAAEI,SAAS,EAAER,MAAM,EAAEC,IAAI,CAAC;MAC9D,CAAC,MACI;QACDU,MAAM,GAAGD,EAAE,CAACb,IAAI,CAACO,IAAI,EAAEI,SAAS,EAAER,MAAM,EAAEC,IAAI,CAAC;MACnD;MACA,IAAI,CAACU,MAAM,IAAIV,IAAI,EAAE;QACjB;MACJ;IACJ;IACA,MAAMa,MAAM,GAAGN,SAAS,CAACO,SAAS,CAAC,CAAC;IACpC;AACR;AACA;IACQ,IAAI,CAACD,MAAM,EAAE;MACT,OAAOZ,gBAAgB,GAAGM,SAAS,CAACQ,OAAO,CAAC,CAAC,GAAGlB,IAAI;IACxD;IACA;AACR;AACA;IACQ,MAAMgB,MAAM;EAChB;AACJ;AACAxB,OAAO,CAACI,QAAQ,GAAGA,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\n/**\n * @module indicative-rules\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\nconst alphaRegex = /^[a-z]+$/i;\n/**\n * Returns a boolean telling if value passes the alpha test or not.\n *\n * @example\n * ```js\n * const { is } = require('indicative')\n *\n * if (is.alpha('hello')) {\n * }\n * ```\n */\nexports.alpha = input => {\n  return typeof input === 'string' && alphaRegex.test(input);\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","alphaRegex","alpha","input","test"],"sources":["/Users/akshayg/Personal/blog/blog/node_modules/indicative-rules/build/src/raw/alpha.js"],"sourcesContent":["\"use strict\";\n/**\n * @module indicative-rules\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\nconst alphaRegex = /^[a-z]+$/i;\n/**\n * Returns a boolean telling if value passes the alpha test or not.\n *\n * @example\n * ```js\n * const { is } = require('indicative')\n *\n * if (is.alpha('hello')) {\n * }\n * ```\n */\nexports.alpha = (input) => {\n    return typeof (input) === 'string' && alphaRegex.test(input);\n};\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,GAAG,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAF,OAAO,CAACG,KAAK,GAAIC,KAAK,IAAK;EACvB,OAAO,OAAQA,KAAM,KAAK,QAAQ,IAAIF,UAAU,CAACG,IAAI,CAACD,KAAK,CAAC;AAChE,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
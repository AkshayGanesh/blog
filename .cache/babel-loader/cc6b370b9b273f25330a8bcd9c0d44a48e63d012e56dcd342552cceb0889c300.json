{"ast":null,"code":"\"use strict\";\n\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst indicative_utils_1 = require(\"indicative-utils\");\nconst MISSING_VALUE = 'includes:make sure to define substring to match';\n/**\n * Enforces the field value to include a given substring.\n *\n * ```ts\n * import { validations } from 'indicative/validator'\n *\n * const rules = {\n *   url: 'includes:adonisjs.com'\n * }\n *\n * // or\n * const rules = {\n *   url: [\n *     validations.includes(['adonisjs.com'])\n *   ]\n * }\n * ```\n */\nconst validation = {\n  async: false,\n  compile(args) {\n    indicative_utils_1.ensureLength(args, MISSING_VALUE, 1);\n    return [String(args[0])];\n  },\n  validate: (data, field, _ref, config) => {\n    let [substring] = _ref;\n    const fieldValue = indicative_utils_1.getValue(data, field);\n    if (indicative_utils_1.skippable(fieldValue, field, config)) {\n      return true;\n    }\n    if (typeof fieldValue !== 'string') {\n      return false;\n    }\n    return fieldValue.includes(substring);\n  }\n};\nexports.default = validation;","map":{"version":3,"names":["Object","defineProperty","exports","value","indicative_utils_1","require","MISSING_VALUE","validation","async","compile","args","ensureLength","String","validate","data","field","_ref","config","substring","fieldValue","getValue","skippable","includes","default"],"sources":["/Users/akshayg/Personal/blog/blog/node_modules/indicative-rules/build/src/validations/string/includes.js"],"sourcesContent":["\"use strict\";\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst indicative_utils_1 = require(\"indicative-utils\");\nconst MISSING_VALUE = 'includes:make sure to define substring to match';\n/**\n * Enforces the field value to include a given substring.\n *\n * ```ts\n * import { validations } from 'indicative/validator'\n *\n * const rules = {\n *   url: 'includes:adonisjs.com'\n * }\n *\n * // or\n * const rules = {\n *   url: [\n *     validations.includes(['adonisjs.com'])\n *   ]\n * }\n * ```\n */\nconst validation = {\n    async: false,\n    compile(args) {\n        indicative_utils_1.ensureLength(args, MISSING_VALUE, 1);\n        return [String(args[0])];\n    },\n    validate: (data, field, [substring], config) => {\n        const fieldValue = indicative_utils_1.getValue(data, field);\n        if (indicative_utils_1.skippable(fieldValue, field, config)) {\n            return true;\n        }\n        if (typeof (fieldValue) !== 'string') {\n            return false;\n        }\n        return fieldValue.includes(substring);\n    },\n};\nexports.default = validation;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,kBAAkB,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACtD,MAAMC,aAAa,GAAG,iDAAiD;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,GAAG;EACfC,KAAK,EAAE,KAAK;EACZC,OAAOA,CAACC,IAAI,EAAE;IACVN,kBAAkB,CAACO,YAAY,CAACD,IAAI,EAAEJ,aAAa,EAAE,CAAC,CAAC;IACvD,OAAO,CAACM,MAAM,CAACF,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EACDG,QAAQ,EAAEA,CAACC,IAAI,EAAEC,KAAK,EAAAC,IAAA,EAAeC,MAAM,KAAK;IAAA,IAAxB,CAACC,SAAS,CAAC,GAAAF,IAAA;IAC/B,MAAMG,UAAU,GAAGf,kBAAkB,CAACgB,QAAQ,CAACN,IAAI,EAAEC,KAAK,CAAC;IAC3D,IAAIX,kBAAkB,CAACiB,SAAS,CAACF,UAAU,EAAEJ,KAAK,EAAEE,MAAM,CAAC,EAAE;MACzD,OAAO,IAAI;IACf;IACA,IAAI,OAAQE,UAAW,KAAK,QAAQ,EAAE;MAClC,OAAO,KAAK;IAChB;IACA,OAAOA,UAAU,CAACG,QAAQ,CAACJ,SAAS,CAAC;EACzC;AACJ,CAAC;AACDhB,OAAO,CAACqB,OAAO,GAAGhB,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}
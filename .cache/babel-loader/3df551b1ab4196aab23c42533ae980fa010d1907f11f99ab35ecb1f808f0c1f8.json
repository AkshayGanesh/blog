{"ast":null,"code":"\"use strict\";\n\n/**\n * @module indicative-rules\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst indicative_utils_1 = require(\"indicative-utils\");\nconst linksRegex = /<a\\b[^>]*>(.*?)<\\/a>/g;\n/**\n * Strips `a` tags from a given string.\n *\n * ```ts\n * import { sanitizations } from 'indicative/sanitizer'\n *\n * const sanitizationRules = {\n *   message: 'strip_links'\n * }\n *\n * // or\n * const sanitizationRules = {\n *   message: [\n *     sanitizations.stripLinks()\n *   ]\n * }\n * ```\n */\nconst stripLinks = {\n  sanitize(data, field) {\n    let fieldValue = indicative_utils_1.getValue(data, field);\n    if (typeof fieldValue !== 'string') {\n      return;\n    }\n    indicative_utils_1.patchValue(data, field, fieldValue.replace(linksRegex, (_match, group) => group.trim()));\n  }\n};\nexports.default = stripLinks;","map":{"version":3,"names":["Object","defineProperty","exports","value","indicative_utils_1","require","linksRegex","stripLinks","sanitize","data","field","fieldValue","getValue","patchValue","replace","_match","group","trim","default"],"sources":["/Users/akshayg/Personal/blog/blog/node_modules/indicative-rules/build/src/sanitizations/stripLinks.js"],"sourcesContent":["\"use strict\";\n/**\n * @module indicative-rules\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst indicative_utils_1 = require(\"indicative-utils\");\nconst linksRegex = /<a\\b[^>]*>(.*?)<\\/a>/g;\n/**\n * Strips `a` tags from a given string.\n *\n * ```ts\n * import { sanitizations } from 'indicative/sanitizer'\n *\n * const sanitizationRules = {\n *   message: 'strip_links'\n * }\n *\n * // or\n * const sanitizationRules = {\n *   message: [\n *     sanitizations.stripLinks()\n *   ]\n * }\n * ```\n */\nconst stripLinks = {\n    sanitize(data, field) {\n        let fieldValue = indicative_utils_1.getValue(data, field);\n        if (typeof (fieldValue) !== 'string') {\n            return;\n        }\n        indicative_utils_1.patchValue(data, field, fieldValue.replace(linksRegex, (_match, group) => group.trim()));\n    },\n};\nexports.default = stripLinks;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,kBAAkB,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACtD,MAAMC,UAAU,GAAG,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,GAAG;EACfC,QAAQA,CAACC,IAAI,EAAEC,KAAK,EAAE;IAClB,IAAIC,UAAU,GAAGP,kBAAkB,CAACQ,QAAQ,CAACH,IAAI,EAAEC,KAAK,CAAC;IACzD,IAAI,OAAQC,UAAW,KAAK,QAAQ,EAAE;MAClC;IACJ;IACAP,kBAAkB,CAACS,UAAU,CAACJ,IAAI,EAAEC,KAAK,EAAEC,UAAU,CAACG,OAAO,CAACR,UAAU,EAAE,CAACS,MAAM,EAAEC,KAAK,KAAKA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC/G;AACJ,CAAC;AACDf,OAAO,CAACgB,OAAO,GAAGX,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}
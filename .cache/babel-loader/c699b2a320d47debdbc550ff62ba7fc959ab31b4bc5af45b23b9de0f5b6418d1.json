{"ast":null,"code":"\"use strict\";\n\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst indicative_utils_1 = require(\"indicative-utils\");\nconst under_1 = require(\"../../raw/under\");\nconst MISSING_VALUE = 'under:make sure to define max value';\nconst INVALID_TYPE = 'under:max value must be defined as an integer';\n/**\n * Enforces the field value to be under the defined value.\n *\n * ```ts\n * import { validations } from 'indicative/validator'\n *\n * const rules = {\n *   age: 'integer|under:60'\n * }\n *\n * // or\n * const rules = {\n *   age: [\n *     validations.integer(),\n *     validations.under(60)\n *   ]\n * }\n * ```\n */\nconst validation = {\n  async: false,\n  compile(args) {\n    indicative_utils_1.ensureLength(args, MISSING_VALUE, 1);\n    const minValue = indicative_utils_1.cast(args[0], 'float', INVALID_TYPE);\n    return [minValue];\n  },\n  validate: (data, field, _ref, config) => {\n    let [maxValue] = _ref;\n    let fieldValue = indicative_utils_1.getValue(data, field);\n    return indicative_utils_1.skippable(fieldValue, field, config) || under_1.under(fieldValue, maxValue);\n  }\n};\nexports.default = validation;","map":{"version":3,"names":["Object","defineProperty","exports","value","indicative_utils_1","require","under_1","MISSING_VALUE","INVALID_TYPE","validation","async","compile","args","ensureLength","minValue","cast","validate","data","field","_ref","config","maxValue","fieldValue","getValue","skippable","under","default"],"sources":["/Users/akshayg/Personal/blog/blog/node_modules/indicative-rules/build/src/validations/number/under.js"],"sourcesContent":["\"use strict\";\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst indicative_utils_1 = require(\"indicative-utils\");\nconst under_1 = require(\"../../raw/under\");\nconst MISSING_VALUE = 'under:make sure to define max value';\nconst INVALID_TYPE = 'under:max value must be defined as an integer';\n/**\n * Enforces the field value to be under the defined value.\n *\n * ```ts\n * import { validations } from 'indicative/validator'\n *\n * const rules = {\n *   age: 'integer|under:60'\n * }\n *\n * // or\n * const rules = {\n *   age: [\n *     validations.integer(),\n *     validations.under(60)\n *   ]\n * }\n * ```\n */\nconst validation = {\n    async: false,\n    compile(args) {\n        indicative_utils_1.ensureLength(args, MISSING_VALUE, 1);\n        const minValue = indicative_utils_1.cast(args[0], 'float', INVALID_TYPE);\n        return [minValue];\n    },\n    validate: (data, field, [maxValue], config) => {\n        let fieldValue = indicative_utils_1.getValue(data, field);\n        return indicative_utils_1.skippable(fieldValue, field, config) || under_1.under(fieldValue, maxValue);\n    },\n};\nexports.default = validation;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,kBAAkB,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACtD,MAAMC,OAAO,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAC1C,MAAME,aAAa,GAAG,qCAAqC;AAC3D,MAAMC,YAAY,GAAG,+CAA+C;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,GAAG;EACfC,KAAK,EAAE,KAAK;EACZC,OAAOA,CAACC,IAAI,EAAE;IACVR,kBAAkB,CAACS,YAAY,CAACD,IAAI,EAAEL,aAAa,EAAE,CAAC,CAAC;IACvD,MAAMO,QAAQ,GAAGV,kBAAkB,CAACW,IAAI,CAACH,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,EAAEJ,YAAY,CAAC;IACxE,OAAO,CAACM,QAAQ,CAAC;EACrB,CAAC;EACDE,QAAQ,EAAEA,CAACC,IAAI,EAAEC,KAAK,EAAAC,IAAA,EAAcC,MAAM,KAAK;IAAA,IAAvB,CAACC,QAAQ,CAAC,GAAAF,IAAA;IAC9B,IAAIG,UAAU,GAAGlB,kBAAkB,CAACmB,QAAQ,CAACN,IAAI,EAAEC,KAAK,CAAC;IACzD,OAAOd,kBAAkB,CAACoB,SAAS,CAACF,UAAU,EAAEJ,KAAK,EAAEE,MAAM,CAAC,IAAId,OAAO,CAACmB,KAAK,CAACH,UAAU,EAAED,QAAQ,CAAC;EACzG;AACJ,CAAC;AACDnB,OAAO,CAACwB,OAAO,GAAGjB,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction toInt(value) {\n  let fractional = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  if (typeof value === 'number') {\n    return fractional ? value : Math.trunc(value);\n  }\n  if (typeof value !== 'string') {\n    return null;\n  }\n  const casted = Number(value);\n  if (isNaN(casted)) {\n    return null;\n  }\n  return fractional ? casted : Math.trunc(casted);\n}\nexports.toInt = toInt;","map":{"version":3,"names":["Object","defineProperty","exports","value","toInt","fractional","arguments","length","undefined","Math","trunc","casted","Number","isNaN"],"sources":["/Users/akshayg/Personal/blog/blog/node_modules/indicative-utils/build/src/cast/toInt.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction toInt(value, fractional = false) {\n    if (typeof (value) === 'number') {\n        return fractional ? value : Math.trunc(value);\n    }\n    if (typeof (value) !== 'string') {\n        return null;\n    }\n    const casted = Number(value);\n    if (isNaN(casted)) {\n        return null;\n    }\n    return fractional ? casted : Math.trunc(casted);\n}\nexports.toInt = toInt;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,SAASC,KAAKA,CAACD,KAAK,EAAsB;EAAA,IAApBE,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EACpC,IAAI,OAAQH,KAAM,KAAK,QAAQ,EAAE;IAC7B,OAAOE,UAAU,GAAGF,KAAK,GAAGM,IAAI,CAACC,KAAK,CAACP,KAAK,CAAC;EACjD;EACA,IAAI,OAAQA,KAAM,KAAK,QAAQ,EAAE;IAC7B,OAAO,IAAI;EACf;EACA,MAAMQ,MAAM,GAAGC,MAAM,CAACT,KAAK,CAAC;EAC5B,IAAIU,KAAK,CAACF,MAAM,CAAC,EAAE;IACf,OAAO,IAAI;EACf;EACA,OAAON,UAAU,GAAGM,MAAM,GAAGF,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC;AACnD;AACAT,OAAO,CAACE,KAAK,GAAGA,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}
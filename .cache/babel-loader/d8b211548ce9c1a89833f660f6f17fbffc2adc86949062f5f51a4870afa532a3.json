{"ast":null,"code":"\"use strict\";\n\n/*\n * indicative-parser\n *\n * (c) Harminder Virk <virk@adonisjs.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst getArrayType_1 = require(\"../utils/getArrayType\");\n/**\n * Create an array type schema node\n */\nfunction array() {\n  for (var _len = arguments.length, rules = new Array(_len), _key = 0; _key < _len; _key++) {\n    rules[_key] = arguments[_key];\n  }\n  return {\n    members(schema) {\n      return getArrayType_1.getArrayType(schema, false, rules);\n    }\n  };\n}\nexports.array = array;\n/**\n * Create an optional array type schema node\n */\narray.optional = function () {\n  for (var _len2 = arguments.length, rules = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    rules[_key2] = arguments[_key2];\n  }\n  return {\n    members(schema) {\n      return getArrayType_1.getArrayType(schema, true, rules);\n    }\n  };\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","getArrayType_1","require","array","_len","arguments","length","rules","Array","_key","members","schema","getArrayType","optional","_len2","_key2"],"sources":["/Users/akshayg/Personal/blog/blog/node_modules/indicative-parser/build/src/Types/array.js"],"sourcesContent":["\"use strict\";\n/*\n * indicative-parser\n *\n * (c) Harminder Virk <virk@adonisjs.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst getArrayType_1 = require(\"../utils/getArrayType\");\n/**\n * Create an array type schema node\n */\nfunction array(...rules) {\n    return {\n        members(schema) {\n            return getArrayType_1.getArrayType(schema, false, rules);\n        },\n    };\n}\nexports.array = array;\n/**\n * Create an optional array type schema node\n */\narray.optional = (...rules) => {\n    return {\n        members(schema) {\n            return getArrayType_1.getArrayType(schema, true, rules);\n        },\n    };\n};\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,cAAc,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AACvD;AACA;AACA;AACA,SAASC,KAAKA,CAAA,EAAW;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAPC,KAAK,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAALF,KAAK,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EACnB,OAAO;IACHC,OAAOA,CAACC,MAAM,EAAE;MACZ,OAAOV,cAAc,CAACW,YAAY,CAACD,MAAM,EAAE,KAAK,EAAEJ,KAAK,CAAC;IAC5D;EACJ,CAAC;AACL;AACAR,OAAO,CAACI,KAAK,GAAGA,KAAK;AACrB;AACA;AACA;AACAA,KAAK,CAACU,QAAQ,GAAG,YAAc;EAAA,SAAAC,KAAA,GAAAT,SAAA,CAAAC,MAAA,EAAVC,KAAK,OAAAC,KAAA,CAAAM,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;IAALR,KAAK,CAAAQ,KAAA,IAAAV,SAAA,CAAAU,KAAA;EAAA;EACtB,OAAO;IACHL,OAAOA,CAACC,MAAM,EAAE;MACZ,OAAOV,cAAc,CAACW,YAAY,CAACD,MAAM,EAAE,IAAI,EAAEJ,KAAK,CAAC;IAC3D;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
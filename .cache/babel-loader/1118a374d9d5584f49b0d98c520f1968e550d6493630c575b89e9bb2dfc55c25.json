{"ast":null,"code":"\"use strict\";\n\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst indicative_utils_1 = require(\"indicative-utils\");\nconst MISSING_VALUE = 'regex:make sure to define regex pattern';\n/**\n * Enforces the field value to pass a custom regular expression.\n *\n * ```ts\n * import { validations } from 'indicative/validator'\n *\n * const rules = {\n *   username: [\n *     validations.regex(['^[a-z]+'])\n *   ]\n * }\n *\n * // or\n * const rules = {\n *   username: [\n *     validations.regex([new RegExp('^  [a-z]+')])\n *   ]\n * }\n * ```\n */\nconst validation = {\n  async: false,\n  compile(args) {\n    indicative_utils_1.ensureLength(args, MISSING_VALUE, 1);\n    const expression = args[0] instanceof RegExp ? args[0] : new RegExp(args[0], args[1]);\n    return [expression];\n  },\n  validate: (data, field, _ref, config) => {\n    let [expression] = _ref;\n    const fieldValue = indicative_utils_1.getValue(data, field);\n    return indicative_utils_1.skippable(fieldValue, field, config) || expression.test(fieldValue);\n  }\n};\nexports.default = validation;","map":{"version":3,"names":["Object","defineProperty","exports","value","indicative_utils_1","require","MISSING_VALUE","validation","async","compile","args","ensureLength","expression","RegExp","validate","data","field","_ref","config","fieldValue","getValue","skippable","test","default"],"sources":["/Users/akshayg/Personal/blog/blog/node_modules/indicative-rules/build/src/validations/string/regex.js"],"sourcesContent":["\"use strict\";\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst indicative_utils_1 = require(\"indicative-utils\");\nconst MISSING_VALUE = 'regex:make sure to define regex pattern';\n/**\n * Enforces the field value to pass a custom regular expression.\n *\n * ```ts\n * import { validations } from 'indicative/validator'\n *\n * const rules = {\n *   username: [\n *     validations.regex(['^[a-z]+'])\n *   ]\n * }\n *\n * // or\n * const rules = {\n *   username: [\n *     validations.regex([new RegExp('^  [a-z]+')])\n *   ]\n * }\n * ```\n */\nconst validation = {\n    async: false,\n    compile(args) {\n        indicative_utils_1.ensureLength(args, MISSING_VALUE, 1);\n        const expression = args[0] instanceof RegExp ? args[0] : new RegExp(args[0], args[1]);\n        return [expression];\n    },\n    validate: (data, field, [expression], config) => {\n        const fieldValue = indicative_utils_1.getValue(data, field);\n        return indicative_utils_1.skippable(fieldValue, field, config) || expression.test(fieldValue);\n    },\n};\nexports.default = validation;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,kBAAkB,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACtD,MAAMC,aAAa,GAAG,yCAAyC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,GAAG;EACfC,KAAK,EAAE,KAAK;EACZC,OAAOA,CAACC,IAAI,EAAE;IACVN,kBAAkB,CAACO,YAAY,CAACD,IAAI,EAAEJ,aAAa,EAAE,CAAC,CAAC;IACvD,MAAMM,UAAU,GAAGF,IAAI,CAAC,CAAC,CAAC,YAAYG,MAAM,GAAGH,IAAI,CAAC,CAAC,CAAC,GAAG,IAAIG,MAAM,CAACH,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC;IACrF,OAAO,CAACE,UAAU,CAAC;EACvB,CAAC;EACDE,QAAQ,EAAEA,CAACC,IAAI,EAAEC,KAAK,EAAAC,IAAA,EAAgBC,MAAM,KAAK;IAAA,IAAzB,CAACN,UAAU,CAAC,GAAAK,IAAA;IAChC,MAAME,UAAU,GAAGf,kBAAkB,CAACgB,QAAQ,CAACL,IAAI,EAAEC,KAAK,CAAC;IAC3D,OAAOZ,kBAAkB,CAACiB,SAAS,CAACF,UAAU,EAAEH,KAAK,EAAEE,MAAM,CAAC,IAAIN,UAAU,CAACU,IAAI,CAACH,UAAU,CAAC;EACjG;AACJ,CAAC;AACDjB,OAAO,CAACqB,OAAO,GAAGhB,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}
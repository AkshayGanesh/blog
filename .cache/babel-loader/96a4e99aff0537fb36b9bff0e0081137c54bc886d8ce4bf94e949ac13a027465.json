{"ast":null,"code":"\"use strict\";\n\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst indicative_utils_1 = require(\"indicative-utils\");\nconst MISSING_VALUES = 'range:make sure to define min and max values';\nconst INVALID_TYPE = 'range:min and max values must be defined as integers';\n/**\n * Enforces the field value to be under a given range.\n *\n * ```ts\n * import { validations } from 'indicative/validator'\n *\n * const rules = {\n *   age: 'integer|range:16,60'\n * }\n *\n * // or\n * const rules = {\n *   age: [\n *     validations.integer(),\n *     validations.range([16, 60])\n *   ]\n * }\n * ```\n */\nconst validation = {\n  async: false,\n  compile(args) {\n    indicative_utils_1.ensureLength(args, MISSING_VALUES, 2);\n    const min = indicative_utils_1.cast(args[0], 'float', INVALID_TYPE);\n    const max = indicative_utils_1.cast(args[1], 'float', INVALID_TYPE);\n    return [min, max];\n  },\n  validate: (data, field, _ref, config) => {\n    let [min, max] = _ref;\n    const fieldValue = indicative_utils_1.getValue(data, field);\n    return indicative_utils_1.skippable(fieldValue, field, config) || fieldValue >= min && fieldValue <= max;\n  }\n};\nexports.default = validation;","map":{"version":3,"names":["Object","defineProperty","exports","value","indicative_utils_1","require","MISSING_VALUES","INVALID_TYPE","validation","async","compile","args","ensureLength","min","cast","max","validate","data","field","_ref","config","fieldValue","getValue","skippable","default"],"sources":["/Users/akshayg/Personal/blog/blog/node_modules/indicative-rules/build/src/validations/number/range.js"],"sourcesContent":["\"use strict\";\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst indicative_utils_1 = require(\"indicative-utils\");\nconst MISSING_VALUES = 'range:make sure to define min and max values';\nconst INVALID_TYPE = 'range:min and max values must be defined as integers';\n/**\n * Enforces the field value to be under a given range.\n *\n * ```ts\n * import { validations } from 'indicative/validator'\n *\n * const rules = {\n *   age: 'integer|range:16,60'\n * }\n *\n * // or\n * const rules = {\n *   age: [\n *     validations.integer(),\n *     validations.range([16, 60])\n *   ]\n * }\n * ```\n */\nconst validation = {\n    async: false,\n    compile(args) {\n        indicative_utils_1.ensureLength(args, MISSING_VALUES, 2);\n        const min = indicative_utils_1.cast(args[0], 'float', INVALID_TYPE);\n        const max = indicative_utils_1.cast(args[1], 'float', INVALID_TYPE);\n        return [min, max];\n    },\n    validate: (data, field, [min, max], config) => {\n        const fieldValue = indicative_utils_1.getValue(data, field);\n        return indicative_utils_1.skippable(fieldValue, field, config) || ((fieldValue >= min) && (fieldValue <= max));\n    },\n};\nexports.default = validation;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,kBAAkB,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACtD,MAAMC,cAAc,GAAG,8CAA8C;AACrE,MAAMC,YAAY,GAAG,sDAAsD;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,GAAG;EACfC,KAAK,EAAE,KAAK;EACZC,OAAOA,CAACC,IAAI,EAAE;IACVP,kBAAkB,CAACQ,YAAY,CAACD,IAAI,EAAEL,cAAc,EAAE,CAAC,CAAC;IACxD,MAAMO,GAAG,GAAGT,kBAAkB,CAACU,IAAI,CAACH,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,EAAEJ,YAAY,CAAC;IACnE,MAAMQ,GAAG,GAAGX,kBAAkB,CAACU,IAAI,CAACH,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,EAAEJ,YAAY,CAAC;IACnE,OAAO,CAACM,GAAG,EAAEE,GAAG,CAAC;EACrB,CAAC;EACDC,QAAQ,EAAEA,CAACC,IAAI,EAAEC,KAAK,EAAAC,IAAA,EAAcC,MAAM,KAAK;IAAA,IAAvB,CAACP,GAAG,EAAEE,GAAG,CAAC,GAAAI,IAAA;IAC9B,MAAME,UAAU,GAAGjB,kBAAkB,CAACkB,QAAQ,CAACL,IAAI,EAAEC,KAAK,CAAC;IAC3D,OAAOd,kBAAkB,CAACmB,SAAS,CAACF,UAAU,EAAEH,KAAK,EAAEE,MAAM,CAAC,IAAMC,UAAU,IAAIR,GAAG,IAAMQ,UAAU,IAAIN,GAAK;EAClH;AACJ,CAAC;AACDb,OAAO,CAACsB,OAAO,GAAGhB,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}